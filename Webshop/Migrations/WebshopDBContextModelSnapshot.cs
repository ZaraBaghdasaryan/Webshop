// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Webshop;

namespace Webshop.Migrations
{
    [DbContext(typeof(WebshopDBContext))]
    partial class WebshopDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Webshop.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Space Suits"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Space Vehicles"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Astronaut Training"
                        });
                });

            modelBuilder.Entity("Webshop.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsLoggedin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Vägen 11, 447 74 Vägen",
                            Email = "annabanan@gmail.com",
                            FirstName = "Anna",
                            IsLoggedin = false,
                            LastName = "Johnson",
                            Password = "1234"
                        });
                });

            modelBuilder.Entity("Webshop.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingCartId")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ShoppingCartId")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Webshop.Models.OrderProducts", b =>
                {
                    b.Property<int>("OrderProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("OrderProductsPrice")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("ShoppingCartId")
                        .HasColumnType("int");

                    b.HasKey("OrderProductId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("Webshop.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Availability")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Availability = 10,
                            CategoryId = 1,
                            Price = 699,
                            ProductName = "Space Suit Purple"
                        },
                        new
                        {
                            ProductId = 2,
                            Availability = 10,
                            CategoryId = 1,
                            Price = 699,
                            ProductName = "Space Suit Black"
                        },
                        new
                        {
                            ProductId = 3,
                            Availability = 10,
                            CategoryId = 1,
                            Price = 699,
                            ProductName = "Space Suit Yellow"
                        },
                        new
                        {
                            ProductId = 4,
                            Availability = 10,
                            CategoryId = 1,
                            Price = 699,
                            ProductName = "Space Suit Blue"
                        },
                        new
                        {
                            ProductId = 5,
                            Availability = 10,
                            CategoryId = 1,
                            Price = 699,
                            ProductName = "Space Suit Dark Blue"
                        },
                        new
                        {
                            ProductId = 6,
                            Availability = 10,
                            CategoryId = 2,
                            Price = 699,
                            ProductName = "Space Shuttle Black"
                        },
                        new
                        {
                            ProductId = 7,
                            Availability = 10,
                            CategoryId = 2,
                            Price = 699,
                            ProductName = "Space Shuttle Blue"
                        },
                        new
                        {
                            ProductId = 8,
                            Availability = 10,
                            CategoryId = 2,
                            Price = 699,
                            ProductName = "Space Shuttle Dark Blue"
                        },
                        new
                        {
                            ProductId = 9,
                            Availability = 10,
                            CategoryId = 2,
                            Price = 699,
                            ProductName = "Space Shuttle Silver"
                        },
                        new
                        {
                            ProductId = 10,
                            Availability = 10,
                            CategoryId = 2,
                            Price = 699,
                            ProductName = "Space Shuttle Red"
                        },
                        new
                        {
                            ProductId = 11,
                            Availability = 10,
                            CategoryId = 3,
                            Price = 699,
                            ProductName = "Learn to be weightless"
                        },
                        new
                        {
                            ProductId = 12,
                            Availability = 10,
                            CategoryId = 3,
                            Price = 699,
                            ProductName = "Free fall training"
                        },
                        new
                        {
                            ProductId = 13,
                            Availability = 10,
                            CategoryId = 3,
                            Price = 699,
                            ProductName = "Moon walk training"
                        },
                        new
                        {
                            ProductId = 14,
                            Availability = 10,
                            CategoryId = 3,
                            Price = 699,
                            ProductName = "Survival on Mars"
                        },
                        new
                        {
                            ProductId = 15,
                            Availability = 10,
                            CategoryId = 3,
                            Price = 699,
                            ProductName = "Conquer your deepest fears of cosmos"
                        });
                });

            modelBuilder.Entity("Webshop.Models.ShoppingCart", b =>
                {
                    b.Property<int>("ShoppingCartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("OrderProductId")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.HasKey("ShoppingCartId");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("Webshop.Models.Order", b =>
                {
                    b.HasOne("Webshop.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Webshop.Models.ShoppingCart", "ShoppingCart")
                        .WithOne("Order")
                        .HasForeignKey("Webshop.Models.Order", "ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Webshop.Models.OrderProducts", b =>
                {
                    b.HasOne("Webshop.Models.Product", "Products")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Webshop.Models.ShoppingCart", "ShoppingCart")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ShoppingCartId");
                });

            modelBuilder.Entity("Webshop.Models.Product", b =>
                {
                    b.HasOne("Webshop.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
